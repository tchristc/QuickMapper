<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="$(SolutionDir)QuickMapper\bin\Debug\QuickMapper.dll" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="QuickMapper" #>
<#@ output extension=".cs" #>
namespace QuickMapper
{
<#
InfferedMapper.Config();
foreach(var  kvp in InfferedMapper.MapInferredTypes)
{
	var domainType = kvp.Key;
	var modelType = kvp.Value;
#>
	public static class <#=domainType.Name#>MapperExtensions
	{
		public static <#=modelType.Name#> Map(this <#=domainType.Name#> domain)
		{
			var model = new <#=modelType.Name#>
			{
			<#
			var domainProperties = domainType.GetProperties().ToList();
			var modelProperties = modelType.GetProperties().ToList();
			
			var bothProperties = domainProperties.Select(x=> x.Name).ToList().Intersect(modelProperties.Select(x=> x.Name).ToList());

			foreach(var property in bothProperties)
			{ 
			#>
	<#=property#> = domain.<#=property#>,
			<#
			}
			#>};
			return model;
		}
	} 
<#}#>
}